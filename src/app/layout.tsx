import type { Metadata } from 'next';
import localFont from 'next/font/local';
import '../globals.css';
import Lenis from '@/components/Lenis';
import { ViewTransitions } from 'next-view-transitions';
// import { routing } from '@/i18n/routing';
// import { notFound } from 'next/navigation';
// import { getMessages, setRequestLocale } from 'next-intl/server';
// import { NextIntlClientProvider } from 'next-intl';
import { ReactNode } from 'react';

// const geistSans = localFont({
//   src: './fonts/GeistVF.woff',
//   variable: '--font-geist-sans',
//   weight: '100 900',
// });
// const geistMono = localFont({
//   src: './fonts/GeistMonoVF.woff',
//   variable: '--font-geist-mono',
//   weight: '100 900',
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// type Params = Promise<{ params: { locale: string } }>;

// export function generateStaticParams() {
//   return routing.locales.map((locale) => ({ locale }));
// }

export default function RootLayout({
  children,
}: // params,
{
  children: ReactNode;
  // params: Params;
}) {
  // const {
  //   params: { locale },
  // } = await params;

  // // Ensure that the incoming `locale` is valid
  // if (!routing.locales.includes(locale as any)) {
  //   notFound();
  // }

  // setRequestLocale(locale);

  // // Providing all messages to the client
  // // side is the easiest way to get started
  // const messages = await getMessages();

  return (
    <ViewTransitions>
      <html lang='en'>
        <body
          // `${geistSans.variable} ${geistMono.variable}
          className={`antialiased`}
        >
          {/* <NextIntlClientProvider messages={messages}> */}
          <Lenis>{children}</Lenis>
          {/* </NextIntlClientProvider> */}
        </body>
      </html>
    </ViewTransitions>
  );
}
